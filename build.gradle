buildscript {
	repositories {
		jcenter()
	}
}

plugins {
  id 'java'
  id 'application'
  id 'eclipse'
  id 'maven'
  id 'jacoco'
}

sourceCompatibility = 11
targetCompatibility = 11

// for compliance with higher Java versions
jacoco {
	toolVersion = "0.8.5"
}

// to use GitHub repositories as dependencies
repositories {
	mavenCentral()
	maven {
		name "jitpack"
		url 'https://jitpack.io' }
}

dependencies {
  // Apollo Dependencies
  if (project.hasProperty("local")) {
    implementation project (':EE-Guice')
    implementation project (':EE-Core')
    implementation project (':EE-Model')
  }else {
    implementation 'com.github.Apollo-Core:EE-Guice:preVertX'
    implementation 'com.github.Apollo-Core:EE-Core:preVertX'
    implementation 'com.github.Apollo-Core:EE-Model:prevertx'
  }

  // SDARG Dependencies
  implementation 'com.github.FedorSmirnov89:opt4j:-SNAPSHOT'
  // dependency to opendse
  implementation 'com.github.FedorSmirnov89:opendse:-SNAPSHOT'

  // Third-party dependencies

  // guice (since we don't link to opt or opendse here)
  // https://mvnrepository.com/artifact/com.google.inject/guice
  implementation group: 'com.google.inject', name: 'guice', version: '5.0.1'
  // gson to define the format of the exchanged messages
  implementation 'com.google.code.gson:gson:2.8.6'
  // VertX
  implementation 'io.vertx:vertx-web:4.0.3'
  // SLF4J and Logback for logging
  implementation group: "ch.qos.logback", name: "logback-classic", version: "1.2.3"

  // Official Docker API
  implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.11'
  implementation 'com.github.docker-java:docker-java-core:3.2.11'

  // Hamcrest matchers
  implementation 'org.hamcrest:hamcrest:2.2'
}

jar {
  manifest {
    attributes 'Main-Class': 'Play'
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  exclude 'META-INF/*.RSA'
  exclude 'META-INF/*.SF'
  exclude 'META-INF/*.DSA'
}

application {
  mainClass = 'Play'
}
